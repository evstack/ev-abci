FROM golang:1.24-alpine AS ignite-builder

# Install dependencies needed for ignite and building
RUN apk add --no-cache \
    libc6-compat \
    curl \
    bash \
    git

# Set environment variables
ENV IGNITE_VERSION=v29.4.0

RUN curl -sSL https://get.ignite.com/cli@${IGNITE_VERSION}! | bash

# Install evolve app templates globally so `ignite evolve` subcommands are available
#RUN ignite app install -g github.com/ignite/apps/evolve@main

WORKDIR /workspace

# Scaffold a plain Cosmos SDK chain
RUN ignite scaffold chain gm --no-module --skip-git --address-prefix gm --minimal

WORKDIR /workspace/gm

RUN ignite app install -g github.com/chatton/apps/evolve@main

# Add only the evolve migrate command (do not scaffold full evolve integration)
# Use the migrate subcommand exposed by the evolve app
RUN ignite evolve add --start=false --migrate

# Build the Cosmos SDK binary
RUN ignite chain build --skip-proto

# create lightweight runtime image
FROM alpine:latest

RUN apk add --no-cache ca-certificates

# create non-root user
RUN addgroup -g 10001 -S gm && \
    adduser -u 10001 -S gm -G gm

WORKDIR /home/gm

# copy the built binary from the builder stage
COPY --from=ignite-builder /go/bin/gmd /usr/local/bin/gmd

RUN chown -R gm:gm /home/gm
USER gm

# expose common ports
EXPOSE 26657 26656 9090 1317

CMD ["gmd"]
