# Multi-stage image to run the GM chain using a prebuilt gmd binary mounted at runtime.
 
# Builder stage: install Ignite CLI and evolve plugin (requires Go toolchain)
FROM golang:1.24-bullseye AS ignite-builder

RUN apt-get update && apt-get install -y --no-install-recommends \
    git curl bash ca-certificates && \
    rm -rf /var/lib/apt/lists/*

# Install Ignite CLI
RUN curl -sSL https://get.ignite.com/cli! | bash

# Install evolve plugin globally so `ignite evolve init` works without Go at runtime
RUN ignite app install -g github.com/ignite/apps/evolve@main

# Runtime stage: slim Debian with needed tools and Ignite artifacts from builder
FROM debian:bullseye-slim

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates curl jq bash sudo netcat-openbsd && \
    rm -rf /var/lib/apt/lists/*

# Copy ignite binary and plugin cache from builder
COPY --from=ignite-builder /usr/local/bin/ignite /usr/local/bin/ignite
COPY --from=ignite-builder /root/.ignite /root/.ignite
RUN chmod +x /usr/local/bin/ignite

# Create gm user with passwordless sudo
RUN adduser --disabled-password --gecos "" gm && \
    echo "gm ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Copy scripts; the gm source itself will be mounted as a volume at runtime
WORKDIR /home/gm
COPY --chown=gm:gm gm/integration-tests/scripts/init-gm.sh /home/gm/init-gm.sh
COPY --chown=gm:gm gm/integration-tests/scripts/wait-for-da.sh /home/gm/wait-for-da.sh
COPY --chown=gm:gm .github/compose/scripts/run-gm.sh /home/gm/run-gm.sh
RUN chmod +x /home/gm/init-gm.sh /home/gm/wait-for-da.sh /home/gm/run-gm.sh

# Switch to gm user
USER gm
WORKDIR /home/gm

# Default environment
ENV GM_HOME=/home/gm/.gm
ENV CHAIN_ID=gm
ENV MONIKER=gm-local
ENV ATTESTER_MODE=false

# Default command runs the wrapper script; `gmd` binary and GM_HOME will be mounted by docker-compose
CMD ["/home/gm/run-gm.sh"]
