name: Cosmos SDK to Evolve Migration Test

on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  packages: write   # needed for GHCR push

env:
  EVNODE_VERSION: "v1.0.0-beta.6"
  IGNITE_VERSION: "v29.4.0"
  IGNITE_EVOLVE_APP_VERSION: "main" # use tagged when apps has tagged (blocked on things)
  EVOLVE_IMAGE_REPO: "ghcr.io/evstack/evolve-abci-gm"
  COSMOS_SDK_IMAGE_REPO: "ghcr.io/evstack/cosmos-sdk-gm"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # determine-tag sets the tag to be either pr-1234 if it is a PR, or main if it is main branch.
  determine-tag:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.vars.outputs.tag }}
    steps:
      - name: Determine Docker tag
        id: vars
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
            echo "tag=pr-${{ github.event.pull_request.number }}" >> "$GITHUB_OUTPUT"
          elif [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            echo "tag=main" >> "$GITHUB_OUTPUT"
          else
            echo "tag=$(echo "${GITHUB_REF_NAME}" | tr '/' '-')" >> "$GITHUB_OUTPUT"
          fi

  docker-build-sdk-image:
    name: Build Cosmos-SDK Docker Images
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: determine-tag

    strategy:
      fail-fast: false
      matrix:
        include:
          - enable_ibc: "true"
            tag_suffix: ""          # normal tag
          - enable_ibc: "false"
            tag_suffix: "-no-ibc"   # appended to tag

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Echo tag
        run: |
          echo "Base tag: ${{ needs.determine-tag.outputs.image_tag }}"
          echo "Full tag: ${{ needs.determine-tag.outputs.image_tag }}${{ matrix.tag_suffix }}"
          echo "ENABLE_IBC=${{ matrix.enable_ibc }}"

      - name: Build & push Cosmos-SDK image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.cosmos-sdk
          build-args: |
            IGNITE_VERSION=${{ env.IGNITE_VERSION }}
            ENABLE_IBC=${{ matrix.enable_ibc }}
          push: true
          tags: ${{ env.COSMOS_SDK_IMAGE_REPO }}:${{ needs.determine-tag.outputs.image_tag }}${{ matrix.tag_suffix }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


  docker-build-evolve-image:
    name: Build Evolve Docker Images
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: determine-tag

    strategy:
      fail-fast: false
      matrix:
        include:
          - enable_ibc: "true"
            tag_suffix: ""          # normal tag
          - enable_ibc: "false"
            tag_suffix: "-no-ibc"   # appended to tag

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Echo tag
        run: |
          echo "Base tag: ${{ needs.determine-tag.outputs.image_tag }}"
          echo "Full tag: ${{ needs.determine-tag.outputs.image_tag }}${{ matrix.tag_suffix }}"
          echo "ENABLE_IBC=${{ matrix.enable_ibc }}"

      - name: Build & push Evolve image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          build-args: |
            EVNODE_VERSION=${{ env.EVNODE_VERSION }}
            IGNITE_VERSION=${{ env.IGNITE_VERSION }}
            IGNITE_EVOLVE_APP_VERSION=${{ env.IGNITE_EVOLVE_APP_VERSION }}
            ENABLE_IBC=${{ matrix.enable_ibc }}
          push: true
          tags: ${{ env.EVOLVE_IMAGE_REPO }}:${{ needs.determine-tag.outputs.image_tag }}${{ matrix.tag_suffix }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  migration-tastora-single-node:
    name: Test Migration from Cosmos SDK to Evolve
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs:
      - determine-tag
      - docker-build-evolve-image
      - docker-build-sdk-image

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: tests/integration/go.mod
          cache: true

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull images
        run: |
          docker pull ${{ env.EVOLVE_IMAGE_REPO }}:${{ needs.determine-tag.outputs.image_tag }}
          docker pull ${{ env.COSMOS_SDK_IMAGE_REPO }}:${{ needs.determine-tag.outputs.image_tag }}

      - name: Run Migration Test
        run: |
          cd tests/integration
          go test -v -run TestMigrationSuite/TestCosmosToEvolveMigration -timeout 30m
        env:
          EVOLVE_IMAGE_REPO: ${{ env.EVOLVE_IMAGE_REPO }}
          EVOLVE_IMAGE_TAG: ${{ needs.determine-tag.outputs.image_tag }}
          COSMOS_SDK_IMAGE_REPO: ${{ env.COSMOS_SDK_IMAGE_REPO }}
          COSMOS_SDK_IMAGE_TAG: ${{ needs.determine-tag.outputs.image_tag }}

  migration-tastora-multi-node:
    name: Test Migration from Cosmos SDK to Evolve
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs:
      - determine-tag
      - docker-build-evolve-image
      - docker-build-sdk-image

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: tests/integration/go.mod
          cache: true

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull images
        run: |
          docker pull ${{ env.EVOLVE_IMAGE_REPO }}:${{ needs.determine-tag.outputs.image_tag }}-no-ibc
          docker pull ${{ env.COSMOS_SDK_IMAGE_REPO }}:${{ needs.determine-tag.outputs.image_tag }}-no-ibc

      - name: Run Migration Test
        run: |
          cd tests/integration
          go test -v -run TestMigrationSuite/TestCosmosToEvolveMigration_MultiValidator_GovSuccess -timeout 30m
        env:
          EVOLVE_IMAGE_REPO: ${{ env.EVOLVE_IMAGE_REPO }}
          EVOLVE_IMAGE_TAG: ${{ needs.determine-tag.outputs.image_tag }}-no-ibc
          COSMOS_SDK_IMAGE_REPO: ${{ env.COSMOS_SDK_IMAGE_REPO }}
          COSMOS_SDK_IMAGE_TAG: ${{ needs.determine-tag.outputs.image_tag }}-no-ibc
