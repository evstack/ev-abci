name: integration_attester_test

on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  integration:
    name: Setup Evolve Chain (scaffold & build)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      DO_NOT_TRACK: true
      EVNODE_VERSION: "v1.0.0-beta.2.0.20250908090838-0584153217ed"
      IGNITE_VERSION: "v29.3.1"
      IGNITE_EVOLVE_APP_VERSION: "main"
      GAIAD_VERSION: "v24.0.0"

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true

      - name: Install Ignite CLI
        run: |
          echo "Installing Ignite CLI ${IGNITE_VERSION}"
          curl -sSL https://get.ignite.com/cli@$IGNITE_VERSION! | bash

      - name: Scaffold Evolve Chain
        run: |
          echo "Scaffolding chain gm and adding evolve app (${IGNITE_EVOLVE_APP_VERSION})"
          ignite scaffold chain gm --no-module --skip-git --address-prefix gm
          cd gm
          ignite app install github.com/ignite/apps/evolve@$IGNITE_EVOLVE_APP_VERSION
          ignite evolve add

      - name: Replace Modules and Prepare Chain
        run: |
          echo "Replacing modules (ev-node @ ${EVNODE_VERSION}, ev-abci -> local)"
          CURRENT_DIR=$(pwd)
          GO_EXECUTION_ABCI_DIR=$CURRENT_DIR
          cd gm
          go mod edit -replace github.com/evstack/ev-node=github.com/evstack/ev-node@$EVNODE_VERSION
          go mod edit -replace github.com/evstack/ev-abci=$GO_EXECUTION_ABCI_DIR
          echo "Running go mod tidy"
          go mod tidy
          echo "Building chain with Ignite (skip proto)"
          ignite chain build --skip-proto
          echo "Initializing evolve"
          ignite evolve init

      - name: Build Docker images (compose)
        run: |
          set -euo pipefail
          echo "Building images"
          docker compose -f .github/compose/stack/docker-compose.yml build --pull
          docker images | awk 'NR==1 || /integration-tests-binaries/ {print}' || true

      - name: Start Local DA (docker compose)
        run: |
          docker compose -f .github/compose/stack/docker-compose.yml up -d local-da
          docker compose -f .github/compose/stack/docker-compose.yml ps
