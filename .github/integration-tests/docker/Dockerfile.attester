FROM golang:1.24-alpine as builder

# Install dependencies
RUN apk add --no-cache git make gcc musl-dev

# Set working directory
WORKDIR /workspace

# Copy dependencies first
COPY ev-abci /workspace/ev-abci
COPY ev-node /workspace/ev-node  
COPY tastora /workspace/tastora

# Copy GM chain source code
COPY gm /workspace/gm
WORKDIR /workspace/gm

# Build the attester binary (it has its own go.mod)
RUN go mod download
RUN cd hack/attester && go build -o /workspace/attester .

# Runtime stage
FROM alpine:3.18

# Install runtime dependencies
RUN apk add --no-cache ca-certificates curl jq bash

# Create attester user
RUN adduser -D -s /bin/bash attester

# Copy attester binary
COPY --from=builder /workspace/attester /usr/local/bin/attester

# Copy attester script
COPY --chown=attester:attester gm/integration-tests/scripts/run-attester.sh /home/attester/run-attester.sh
RUN chmod +x /home/attester/run-attester.sh

# Copy wait helpers
COPY --chown=attester:attester gm/integration-tests/scripts/wait-for-chain.sh /home/attester/wait-for-chain.sh
RUN chmod +x /home/attester/wait-for-chain.sh

# Switch to attester user
USER attester
WORKDIR /home/attester

# Environment variables
ENV CHAIN_ID=gm
ENV GM_HOME=/tmp/.gm
ENV GM_NODE=http://gm-chain:26757
ENV GM_API=http://gm-chain:1417
ENV MNEMONIC="abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about"

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD pgrep -f attester || exit 1

# Run attester
CMD ["./run-attester.sh"]