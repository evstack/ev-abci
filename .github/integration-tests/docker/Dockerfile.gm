# Build and runtime stage - compile gmd inside container
FROM golang:1.24-bullseye AS ignite-builder

# Install ignite CLI and evolve plugin (requires Go toolchain, glibc-based)
RUN apt-get update && apt-get install -y --no-install-recommends \
    git curl bash ca-certificates && \
    rm -rf /var/lib/apt/lists/* && \
    curl -sSL https://get.ignite.com/cli! | bash && \
    /usr/local/bin/ignite app install -g github.com/ignite/apps/evolve@main

# Runtime stage
FROM debian:bullseye-slim

ENV DEBIAN_FRONTEND=noninteractive

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates curl jq bash sudo netcat-openbsd && \
    rm -rf /var/lib/apt/lists/*

# Copy ignite binary with evolve plugin from builder stage
COPY --from=ignite-builder /usr/local/bin/ignite /usr/local/bin/ignite
COPY --from=ignite-builder /root/.ignite /root/.ignite
RUN chmod +x /usr/local/bin/ignite

# Create gm user
RUN useradd -m -s /bin/bash gm
# Allow gm user to use sudo without password
RUN echo "gm ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Copy ignite configuration to gm user
COPY --from=ignite-builder /root/.ignite /home/gm/.ignite
RUN chown -R gm:gm /home/gm/.ignite

# Copy initialization script
COPY --chown=gm:gm .github/integration-tests/scripts/init-gm.sh /home/gm/init-gm.sh
RUN chmod +x /home/gm/init-gm.sh

# Copy wait helper
COPY --chown=gm:gm .github/integration-tests/scripts/wait-for-da.sh /home/gm/wait-for-da.sh
RUN chmod +x /home/gm/wait-for-da.sh

# Switch to gm user
USER gm
WORKDIR /home/gm

# Set up environment
ENV GM_HOME=/home/gm/.gm
ENV CHAIN_ID=gm
ENV MONIKER=gm-local
ENV ATTESTER_MODE=false

# Expose ports
# RPC: 26757, P2P: 26756, gRPC: 9190, API: 1417
EXPOSE 26757 26756 9190 1417

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:26757/status || exit 1

# Initialize and start
CMD ["./init-gm.sh"]
