services:
  local-da:
    image: local-da:latest
    container_name: rollkit-local-da
    command: ["local-da", "-listen-all"]
    ports:
      - "7980:7980"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "7980"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - ibc-test

  # Gaia chain (Cosmos Hub)
  gaia-chain:
    image: ghcr.io/cosmos/gaia:${GAIA_VERSION:-v25.1.0}
    platform: linux/amd64
    container_name: gaia-chain
    environment:
      - CHAIN_ID=gaia-local
      - MONIKER=gaia-local
      - KEYRING_BACKEND=test
      - GAIA_HOME=/home/nonroot/.gaia_local
      - GAIA_MNEMONIC=${GAIA_MNEMONIC:-abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about}
    ports:
      - "26657:26657"  # RPC
      - "26656:26656"  # P2P
      - "9090:9090"    # gRPC
      - "1317:1317"    # API
    volumes:
      - ../integration-tests/scripts/init-gaia.sh:/home/nonroot/init-gaia.sh:ro
    entrypoint: ["/bin/sh","-lc"]
    command: ["/bin/sh /home/nonroot/init-gaia.sh"]
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 26657 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 120s
    networks:
      - ibc-test

  # GM chain (with rollkit)
  gm-chain:
    image: gm-chain:latest
    container_name: gm-chain
    ports:
      - "26757:26757"  # RPC
      - "26756:26756"  # P2P  
      - "9190:9190"    # gRPC
      - "1417:1417"    # API
    volumes:
      - ../integration-tests/scripts:/home/gm/scripts:ro
      - gm-data:/shared:Z
    environment:
      - CHAIN_ID=gm
      - MONIKER=gm-local
      - GM_HOME=/home/gm/.gm
      - ATTESTER_MODE=true
      - DEBUG=1
    depends_on:
      local-da:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:26757/status"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - ibc-test

  # Attester service
  attester:
    build:
      context: ../..
      dockerfile: .github/integration-tests/docker/Dockerfile.attester
    container_name: gm-attester
    volumes:
      - ../integration-tests/scripts:/home/attester/scripts:ro
      - gm-data:/home/attester/.gm:Z
    environment:
      - CHAIN_ID=gm
      - GM_NODE=http://gm-chain:26757
      - GM_API=http://gm-chain:1417
      - GM_HOME=/home/attester/.gm
      - MNEMONIC=abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about
      - VERBOSE=true
    depends_on:
      gm-chain:
        condition: service_healthy
    restart: on-failure
    networks:
      - ibc-test

  # IBC Setup (only setup, no relayer)
  ibc-setup:
    image: ghcr.io/informalsystems/hermes:1.13.1
    container_name: ibc-setup
    user: root
    volumes:
      - ../integration-tests/scripts:/home/tester/scripts:ro
      - ../integration-tests/config:/home/tester/config:ro
      - ibc-shared:/tmp
    environment:
      - GM_RPC=http://gm-chain:26757
      - GM_GRPC=http://gm-chain:9190
      - GM_API=http://gm-chain:1417
      - GAIA_RPC=http://gaia-chain:26657
      - GAIA_GRPC=http://gaia-chain:9090
      - GAIA_API=http://gaia-chain:1317
      - HERMES_HOME=/root/.hermes
    depends_on:
      gaia-chain:
        condition: service_healthy
      gm-chain:
        condition: service_healthy
      attester:
        condition: service_started
    restart: "no"
    stop_grace_period: 30s
    entrypoint: /bin/sh -lc
    command: |
      'echo "ðŸš€ Preparing Hermes configuration..." && \
       # Ensure curl and jq are available (Alpine or Debian-based images) && \
       (apk add --no-cache curl jq 2>/dev/null || (apt-get update && apt-get install -y curl jq)) && \
       mkdir -p ~/.hermes && \
       cp /home/tester/config/hermes.toml ~/.hermes/config.toml && \
       echo "ðŸ”— Setting up IBC connection..." && \
       /home/tester/scripts/setup-ibc.sh && \
       echo "âœ… IBC setup completed successfully!"'
    networks:
      - ibc-test

  # Hermes Relayer (runs continuously after setup)
  hermes-relayer:
    image: ghcr.io/informalsystems/hermes:1.13.1
    container_name: hermes-relayer
    user: root
    volumes:
      - ../integration-tests/scripts:/home/tester/scripts:ro
      - ../integration-tests/config:/home/tester/config:ro
      - ibc-shared:/tmp
    environment:
      - GM_RPC=http://gm-chain:26757
      - GM_GRPC=http://gm-chain:9190
      - GM_API=http://gm-chain:1417
      - GAIA_RPC=http://gaia-chain:26657
      - GAIA_GRPC=http://gaia-chain:9090
      - GAIA_API=http://gaia-chain:1317
      - HERMES_HOME=/root/.hermes
    restart: "no"
    entrypoint: /bin/sh -lc
    command: |
      'echo "ðŸš€ Preparing Hermes configuration..." && \
       mkdir -p ~/.hermes && \
        cp /home/tester/config/hermes.toml ~/.hermes/config.toml && \
       echo "ðŸ”‘ Adding relayer keys to hermes..." && \
       echo "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon art" | hermes keys add --chain gm --mnemonic-file /dev/stdin || echo "GM key already exists" && \
       echo "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon art" | hermes keys add --chain gaia-local --mnemonic-file /dev/stdin || echo "Gaia key already exists" && \
       echo "ðŸ”„ Starting Hermes relayer..." && \
       hermes start'
    networks:
      - ibc-test


  # Test runner (runs after IBC setup)
  test-runner:
    build:
      context: ..
      dockerfile: integration-tests/docker/Dockerfile.test
    container_name: ibc-test-runner
    depends_on:
      - gm-chain
    volumes:
      - ../integration-tests/scripts:/home/tester/scripts:ro
      - ../integration-tests/config:/home/tester/config:ro
      - ibc-shared:/tmp
    environment:
      - GM_RPC=http://gm-chain:26757
      - GM_GRPC=http://gm-chain:9190
      - GM_API=http://gm-chain:1417
      - GAIA_RPC=http://gaia-chain:26657
      - GAIA_GRPC=http://gaia-chain:9090
      - GAIA_API=http://gaia-chain:1317
      - HERMES_HOME=/home/tester/.hermes
      - MAX_WAIT_TIME=300
    command: >
      bash -c "
        echo 'ðŸ§ª Starting integration tests...' &&
        cd /home/tester &&
        ./run-integration-test.sh
      "
    networks:
      - ibc-test

networks:
  ibc-test:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes for persistent data (optional)
volumes:
  gaia-data:
  gm-data:
    driver: local
  ibc-shared:
    driver: local
